blueprint:
  name: IKEA Somrig Controls (Z2M-na4ma4)
  description: |
    ## Control anything with IKEA Somrig Dimmer remote (v1.0)
    Only for use with Zigbee2MQTT ([MQTT](https://www.home-assistant.io/integrations/mqtt) + [Z2M addon](https://www.zigbee2mqtt.io/guide/installation/03_ha_addon.html)).
    Adapted from [damru's gist](https://gist.github.com/damru/b2c1c780ffb0ddc084952eb89db9573a) and [prybalko's gist](https://gist.github.com/prybalko/edb951d88c8a4568bd218fa6de6c1a61).

    Available controls:
    - Press the **1** or **2** buttons
    - Double press the **1** or **2** buttons.
    - Press and hold the **1** or **2** buttons. Actions will be executed every _Helper - Hold delay_ but maximum _Helper - Max number of loops_ times.
  source_url: https://github.com/na4ma4/ha-automations/blob/main/blueprints/zigbee2mqtt_somrig_ikea.yaml
  domain: automation
  input:
    z2m_device:
      name: Somrig Switch Device
      description: Zigbee2MQTT Somrig switch device
      selector:
        device:
          filter:
            - manufacturer: IKEA
              model: SOMRIG shortcut button
          multiple: false
    1_press_action:
      name: 1 - Single press action
      description: Choose action(s) to run when **1 dot** button is pressed.
      default: []
      selector:
        action: {}
    1_hold_action:
      name: 1 - Hold action
      description:
        Choose action(s) to run when **1 dot** button is **pressed and
        hold**.
      default: []
      selector:
        action: {}
    1_double_press_action:
      name: 1 - Double press action
      description: Choose action(s) to run when pressing the **1 dot** button twice.
      default: []
      selector:
        action: {}
    2_press_action:
      name: 2 - Single press action
      description: Choose action(s) to run when **2 dots** button is **pressed**.
      default: []
      selector:
        action: {}
    2_hold_action:
      name: 2 - Hold action
      description:
        Choose action(s) to run when **2 dots** button is **pressed and
        hold**.
      default: []
      selector:
        action: {}
    2_double_press_action:
      name: 2 - Double press action
      description: Choose action(s) to run when pressing the **2 dots** button twice.
      default: []
      selector:
        action: {}
    helper_hold_delay:
      name: Helper - Hold delay
      description: Delay between the execution of the **Hold** action(s).
      default: 250
      selector:
        number:
          unit_of_measurement: milliseconds
          min: 100.0
          max: 5000.0
          step: 10.0
          mode: slider
    helper_max_loops:
      name: Helper - Max number of loops
      description: Maximum number of loops when holding down a button.
      default: 20
      selector:
        number:
          min: 1.0
          max: 1000.0
          step: 1.0
          mode: slider
mode: single
max_exceeded: silent
trigger:
  - trigger: device
    domain: mqtt
    device_id: !input z2m_device
    type: action
    subtype: 1_initial_press
    id: 1_initial_press
  - trigger: device
    domain: mqtt
    device_id: !input z2m_device
    type: action
    subtype: 1_short_release
    id: 1_short_release
  - trigger: device
    domain: mqtt
    device_id: !input z2m_device
    type: action
    subtype: 1_long_press
    id: 1_long_press
  - trigger: device
    domain: mqtt
    device_id: !input z2m_device
    type: action
    subtype: 1_long_release
    id: 1_long_release
  - trigger: device
    domain: mqtt
    device_id: !input z2m_device
    type: action
    subtype: 1_double_press
    id: 1_double_press
  - trigger: device
    domain: mqtt
    device_id: !input z2m_device
    type: action
    subtype: 2_initial_press
    id: 2_initial_press
  - trigger: device
    domain: mqtt
    device_id: !input z2m_device
    type: action
    subtype: 2_short_release
    id: 2_short_release
  - trigger: device
    domain: mqtt
    device_id: !input z2m_device
    type: action
    subtype: 2_long_press
    id: 2_long_press
  - trigger: device
    domain: mqtt
    device_id: !input z2m_device
    type: action
    subtype: 2_long_release
    id: 2_long_release
  - trigger: device
    domain: mqtt
    device_id: !input z2m_device
    type: action
    subtype: 2_double_press
    id: 2_double_press
action:
  - choose:
      - conditions:
          - condition: trigger
            id:
              - 1_short_release
        sequence: !input 1_press_action
      - conditions:
          - condition: trigger
            id:
              - 2_short_release
        sequence: !input 2_press_action
      - conditions:
          - condition: trigger
            id:
              - 1_double_press
        sequence: !input 1_double_press_action
      - conditions:
          - condition: trigger
            id:
              - 2_double_press
        sequence: !input 2_double_press_action
      - conditions:
          - condition: trigger
            id:
              - 1_long_press
        sequence:
          - repeat:
              count: !input helper_max_loops
              sequence:
                - parallel:
                    - sequence: !input 1_hold_action
                    - sequence:
                        - choose:
                            - conditions:
                                - condition: trigger
                                  id:
                                    - 1_long_press
                              sequence:
                                - wait_for_trigger:
                                    - trigger: device
                                      domain: mqtt
                                      device_id: !input z2m_device
                                      type: action
                                      subtype: 1_long_release
                                      id: 1_long_release
                                  timeout:
                                    milliseconds: !input helper_hold_delay
                                  continue_on_timeout: true
                                - if:
                                    - condition: template
                                      value_template: "{{ wait.trigger.idx is defined }}"
                                  then:
                                    - stop: button released
      - conditions:
          - condition: trigger
            id:
              - 2_long_press
        sequence:
          - repeat:
              count: !input helper_max_loops
              sequence:
                - parallel:
                    - sequence: !input 1_hold_action
                    - sequence:
                        - choose:
                            - conditions:
                                - condition: trigger
                                  id:
                                    - 2_long_press
                              sequence:
                                - wait_for_trigger:
                                    - trigger: device
                                      domain: mqtt
                                      device_id: !input z2m_device
                                      type: action
                                      subtype: 2_long_release
                                      id: 2_long_release
                                  timeout:
                                    milliseconds: !input helper_hold_delay
                                  continue_on_timeout: true
                                - if:
                                    - condition: template
                                      value_template: "{{ wait.trigger.idx is defined }}"
                                  then:
                                    - stop: button released
